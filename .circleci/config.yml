# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/android:api-25-alpha

    environment:
      JVM_OPTS: -Xmx3200m
      GIT_COMMIT_DESC: git log --format=oneline -n 1 $CIRCLE_SHA1

    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: Download Signing Certification
          command: |
            curl -O https://raw.githubusercontent.com/lukstsm/CiKey/master/keystore.properties
            cd app && curl -O https://raw.githubusercontent.com/lukstsm/CiKey/master/my-release-key.jks

      - run:
          name: Download Project Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: Build App
          command: |
            ./gradlew assembleDebug
            ./gradlew assembleRelease

      - run:
          name: PR Debugging
          command: |
            echo $CIRCLE_PROJECT_USERNAME
            echo $CIRCLE_PROJECT_REPONAME
            echo $CIRCLE_REPOSITORY_URL
            echo $CIRCLE_BUILD_URL
            echo $CIRCLE_BRANCH
            echo $CI_PULL_REQUEST
            echo $CIRCLE_PR_USERNAME
            echo $CIRCLE_PR_REPONAME
            echo $CIRCLE_PR_NUMBER

      - run:
          name: Run Tests
          command: ./gradlew test

      - store_artifacts:
          path: app/build/reports
          destination: reports

      - store_test_results:
          path: app/build/test-results

      - run:
          name: Move APK To Workspace
          command: |
            mkdir -p workspace/apks
            mv app/build/outputs/apk/*.apk workspace/apks

      - persist_to_workspace:
          root: workspace
          paths:
            - apks/*.apk

  appium:
      docker:
        - image: circleci/python:2.7

      steps:
        - attach_workspace:
            at: /tmp/workspace

        - checkout

        - run:
            name: Install Appium Dependencies
            command: |
              virtualenv virtual_workspace

              mkdir virtual_workspace/test-results
              mkdir virtual_workspace/tests
              cp tests/* virtual_workspace/tests

              mkdir virtual_workspace/.aws
              echo "[default]" >> virtual_workspace/.aws/credentials
              echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> virtual_workspace/.aws/credentials
              echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> virtual_workspace/.aws/credentials

              cd virtual_workspace
              source bin/activate

              pip install pytest
              pip install -U selenium
              pip install Appium-Python-Client
              pip install boto3==1.4.4 requests==2.13.0

        - run:
            name: Package Python Appium Tests
            command: |
              cd virtual_workspace
              source bin/activate
              ../package_tests.sh

        - run:
            name: Run AWS Device Farm Tests
            command: |
              cd virtual_workspace
              source bin/activate
              python ../aws_device_farm.py

        - run:
            name: Debug test artifacts
            command: |
              ls virtual_workspace/test-results
              cat virtual_workspace/test-results/appium_results.xml

        - store_test_results:
            path: virtual_workspace/test-results

        - store_artifacts:
            path: virtual_workspace/test-results
            destination: appium

  upload:
      docker:
        # Required, any image will do
        - image: circleci/python:2.7

      steps:
        - attach_workspace:
            at: /tmp/workspace

        - checkout

        - run:
            name: Upload to HockeyApp
            command: |
              export GIT_COMMIT_DESC=$(git log --format=oneline -n 1)
              curl -F "status=2" -F "notify=1" -F "notes=$GIT_COMMIT_DESC" -F "notes_type=0" -F "ipa=@/tmp/workspace/apks/app-debug.apk" -H "X-HockeyAppToken:$HOCKEY_APP_TOKEN" https://rink.hockeyapp.net/api/2/apps/upload
              curl -F "status=2" -F "notify=1" -F "notes=$GIT_COMMIT_DESC" -F "notes_type=0" -F "ipa=@/tmp/workspace/apks/app-release.apk" -H "X-HockeyAppToken:$HOCKEY_APP_TOKEN" https://rink.hockeyapp.net/api/2/apps/upload

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - appium:
          requires:
            - build
      - upload:
          requires:
            - appium

